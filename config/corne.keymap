/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        L3 {
            bindings = <&mo 4>;
            key-positions = <37 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&mt LALT EQUAL           &kp Q  &kp W  &kp F       &kp P        &kp B           &kp J      &kp L            &kp U      &kp Y    &caps_word  &mt LEFT_ALT SINGLE_QUOTE
&mt LCTRL ESCAPE         &kp A  &kp R  &kp S       &kp T        &kp G           &kp M      &kp N            &kp E      &kp I    &kp O       &mt RIGHT_CONTROL SEMICOLON
&mt LEFT_GUI UNDERSCORE  &kp Z  &kp X  &kp C       &kp D        &kp V           &kp K      &kp H            &kp COMMA  &kp DOT  &kp FSLH    &mt RIGHT_GUI DOUBLE_QUOTES
                                       &kp LSHIFT  &lt 3 SPACE  &lt 4 RETURN    &lt 2 TAB  &lt 1 BACKSPACE  &kp RSHFT
            >;
        };

        numbers {
            bindings = <
&trans  &kp LEFT_BRACKET      &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_PARENTHESIS  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp RIGHT_PARENTHESIS    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_BRACE        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp RIGHT_BRACKET        &trans  &trans  &trans  &trans  &trans  &trans
                                            &trans        &kp NUMBER_0  &trans                   &trans  &trans  &trans
            >;
        };

        symbols {
            bindings = <
&kp DOLLAR  &kp QUESTION   &kp PLUS          &kp EQUAL  &kp MINUS      &kp AMPERSAND    &trans  &trans  &trans  &trans  &trans  &trans
&kp AT      &kp BACKSLASH  &kp ASTERISK      &kp EXCL   &kp SLASH      &kp PIPE         &trans  &trans  &trans  &trans  &trans  &trans
&kp CARET   &trans         &kp GREATER_THAN  &kp TILDE  &kp LESS_THAN  &trans           &trans  &trans  &trans  &trans  &trans  &trans
                                             &trans     &trans         &trans           &trans  &trans  &trans
            >;
        };

        movement {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans         &trans       &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans  &trans
                        &trans  &trans  &trans    &trans    &trans         &trans
            >;
        };

        ops {
            bindings = <
&trans  &kp LCTRL       &kp LA(NUMBER_1)  &kp C_VOLUME_UP    &kp LA(NUMBER_4)  &trans    &bt BT_SEL 0              &trans     &trans     &trans     &trans     &trans
&trans  &kp LEFT_SHIFT  &kp LA(NUMBER_2)  &kp C_VOLUME_DOWN  &kp LA(N5)        &trans    &bt BT_SEL 1              &kp LA(H)  &kp LA(J)  &kp LA(K)  &kp LA(L)  &trans
&trans  &trans          &kp LA(NUMBER_3)  &kp K_MUTE         &kp LA(NUMBER_6)  &trans    &bt BT_SEL 2              &trans     &trans     &trans     &trans     &trans
                                          &trans             &bt BT_CLR        &trans    &kp LS(LC(LA(NUMBER_0)))  &kp RSHFT  &trans
            >;
        };
    };
};
